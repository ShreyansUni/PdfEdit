@{
    ViewData["Title"] = "Edit PDF";
    string fileName = ViewBag.FileName;
}
<h2>Edit PDF - Preview and Add Labels</h2>
<div id="pdfContainer"></div>
<input type="text" id="textInput" placeholder="Enter text to add" />
<button onclick="savePdf()">Save & Download</button>

<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.14.305/pdf.min.js"></script>
<script>
    let pdfDoc = null;
    let textInput = document.getElementById('textInput');
    let pdfContainer = document.getElementById('pdfContainer');
    let annotations = [];

    pdfjsLib.getDocument('/uploads/@fileName').promise.then(doc => {
        pdfDoc = doc;
        for (let i = 1; i <= doc.numPages; i++) {
            renderPage(i);
        }
    });

    function renderPage(pageNum) {
        pdfDoc.getPage(pageNum).then(page => {
            let canvas = document.createElement('canvas');
            let ctx = canvas.getContext('2d');
            pdfContainer.appendChild(canvas);

            let viewport = page.getViewport({ scale: 1.5 }); // Scaling for better accuracy
            canvas.width = viewport.width;
            canvas.height = viewport.height;
            page.render({ canvasContext: ctx, viewport: viewport });

            canvas.addEventListener('click', function (event) {
                let rect = canvas.getBoundingClientRect();
                let x = event.clientX - rect.left;
                let y = event.clientY - rect.top;

                let pdfX = (x / viewport.scale);  // Adjust X coordinate with scale factor
                let pdfY = (viewport.height - y) / viewport.scale; // Convert Y & adjust scale

                ctx.font = "16px Arial";
                ctx.fillStyle = "red";
                ctx.fillText(textInput.value, x, y);

                annotations.push({ pageNumber: pageNum, x: pdfX, y: pdfY, text: textInput.value });
            });
        });
    }

    function savePdf() {
        fetch('/Pdf/SavePdf', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ fileName: "@fileName", annotations: annotations })
        }).then(response => response.blob())
            .then(blob => {
                let link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                link.download = "edited_@fileName";
                link.click();
            });
    }
</script>
